---
- name: create rhsso namespace
  k8s:
    state: present
    kind: Project
    api_version: project.openshift.io/v1
    definition:
      metadata:
        name: "{{ workshop_openshift_namespace_rhsso }}"
        annotations:
          openshift.io/description: ""
          openshift.io/display-name: "Red Hat Single Sign-On"
        labels:
          workshop: "{{ workshop_openshift_namespace_label }}"

# deploy rhsso operator
- name: Create operator subscription for RH-SSO
  k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - ./templates/rhsso_operatorgroup.yaml.j2
  - ./templates/rhsso_subscription.yaml.j2

# wait for RHSSO CRD
- name: Wait for RHSSO CRD
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: keycloaks.keycloak.org
  register: r_rhsso_crd
  retries: 200
  delay: 10
  until: r_rhsso_crd.resources | list | length == 1

- name: Create a secret for RHSSO CR
  k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - ./templates/rhsso-credential.yaml.j2

# deploy rhsso CR
- name: Create CR for RHSSO
  k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - ./templates/rhsso_cr.yaml.j2

- name: Get SSO admin token
  uri:
    url: https://keycloak-{{ workshop_openshift_namespace_rhsso }}.{{ route_subdomain }}/auth/realms/master/protocol/openid-connect/token
    validate_certs: false
    method: POST
    body:
      username: "{{workshop_rhsso_admin_user_name}}"
      password: "{{workshop_rhsso_admin_password}}"
      grant_type: "password"
      client_id: "admin-cli"
    body_format: form-urlencoded
    status_code: 200,201,204
  register: rhsso_admin_token
  retries: 120
  delay: 10
  until: rhsso_admin_token.status in [200, 201, 204]

- name: Import realm
  uri:
    url: https://keycloak-{{ workshop_openshift_namespace_rhsso }}.{{ route_subdomain }}/auth/admin/realms
    validate_certs: false
    method: POST
    body_format: json
    headers:
      Content-Type: application/json
      Authorization: "Bearer {{ rhsso_admin_token.json.access_token }}"
    body: "{{ lookup('file', './files/quarkus-realm.json') }}"
    ## accept 409 Conflict in case realm exists
    status_code: 200,201,204,409
  register: result
  retries: 120
  delay: 10
  until: result is succeeded