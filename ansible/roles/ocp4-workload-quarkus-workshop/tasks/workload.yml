# vim: set ft=ansible
---
# Implement your Workload deployment tasks here

# Access for admin
# - name: Give access to opentlc-mgr
#   shell: |
#          oc adm policy add-cluster-role-to-user cluster-admin {{ ocp_username }}

- name: Selected Modules
  debug:
    msg: "selected modules list: {{ modules }}"

# usar Catalogo existente
#- name: Create CatalogSource Index 4.10
#  k8s:
#    state: present
#    merge_type:
#    - strategic-merge
#    - merge
#    definition: "{{ lookup('file', item ) | from_yaml }}"
#  loop:
#  - redhat-operators-index.yaml
#  - community-operators-index.yaml

# Create projects for user
- name: create projects for users
  include_tasks: create_project.yaml
  vars:
    t_project_name: "{{ t_user }}{{ workshop_project_sufix }}"
  loop: "{{ users }}"
  loop_control:
    loop_var: t_user

- name: create guides project
  k8s:
    state: present
    kind: Project
    api_version: project.openshift.io/v1
    definition:
      metadata:
        name: "{{ workshop_openshift_namespace_guide }}"
        annotations:
          openshift.io/description: ""
          openshift.io/display-name: "Quarkus Workshop Guides"
        labels:
          workshop: "{{ workshop_openshift_namespace_label }}"
  when: num_users | int > 0

- name: install guides
  ansible.builtin.include_tasks: 'install-guides.yaml'
  loop: "{{ modules }}"
  loop_control:
    loop_var: guide  
  when: num_users | int > 0

- name: install username distribution
  include_tasks: install-username-distribution.yaml
  when: num_users | int > 0

- name: search for rhsso
  kubernetes.core.k8s_info:
    kind: DeploymentConfig
    name: rhsso
    namespace: '{{ workshop_openshift_namespace_rhsso }}'
  register: r_rhsso_dc

- name: install rhsso
  include_tasks: install-rhsso.yaml
  when: r_rhsso_dc.resources | list | length == 0

# Install CRW via operator
- name: see if codeready is installed
  kubernetes.core.k8s_info:
    api_version: org.eclipse.che/v1
    kind: CheCluster
    name: codeready-workspaces
    namespace: "{{ workshop_openshift_namespace_codeready }}"
  register: r_codeready_cr

- name: show codeready cr
  debug:
    msg: "existing codeready project: {{ r_codeready_cr }}"

- name: install codeready
  include_tasks: install-codeready.yaml
  when: r_codeready_cr.resources | list | length == 0

 # Install  AMQ Streams for all workspaces
- name: Look for amq subscription
  kubernetes.core.k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    name: amq-streams
    namespace: openshift-operators
  register: r_amq_sub

- name: show existing amq sub
  debug:
    msg: "existing amq sub: {{ r_amq_sub }}"

- name: Create OpenShift Objects for Kafka (amq streams)
  include_tasks: install-amqstreams.yaml
  when: r_amq_sub.resources | list | length == 0

 # Install  Jaeger for all workspaces
- name: Look for jaeger subscription
  kubernetes.core.k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    name: jaeger-product
    namespace: openshift-operators
  register: r_jaeger_sub

- name: show existing jaeger sub
  debug:
    msg: "existing jaeger sub: {{ r_jaeger_sub }}"

- name: Create OpenShift Objects for Jaeger
  include_tasks: install-jaeger.yaml
  when: r_jaeger_sub.resources | list | length == 0

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
