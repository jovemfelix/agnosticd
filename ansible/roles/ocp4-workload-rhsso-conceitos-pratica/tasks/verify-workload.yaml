---
- name: verify user projects exist
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Namespace
    name: "{{ item }}{{ workshop_project_sufix }}"
    field_selectors:
      - status.phase=Active
  register: r_user_namespace
  failed_when: r_user_namespace.resources | list | length != 1
  loop: "{{ users }}"

- name: verify guides pod is running
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: '{{ workshop_openshift_namespace_guide }}'
    label_selectors:
      - deploymentconfig=web-{{ item }}
    field_selectors:
      - status.phase=Running
  register: r_guides_pod
  retries: 200
  delay: 10
  until: r_guides_pod.resources | list | length == 1
  loop: "{{ modules }}"
  when: num_users | int > 0

- name: verify guides are accessible
  uri:
    url: http://web-{{ item }}-{{ workshop_openshift_namespace_guide }}.{{ route_subdomain }}
    method: GET
    status_code: 200
  loop: "{{ modules }}"
  when: num_users | int > 0

- name: verify keycloak pod is running
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: '{{ workshop_openshift_namespace_rhsso }}'
    label_selectors:
      - app = keycloak
      - component = keycloak
    field_selectors:
      - status.phase=Running
  register: r_keycloak_pod
  retries: 200
  delay: 10
  until: r_keycloak_pod.resources | list | length == 1

- name: verify keycloak is accessible
  uri:
    url: https://keycloak-{{ workshop_openshift_namespace_rhsso }}.{{ route_subdomain }}
    validate_certs: false
    method: GET
    status_code: 200

- name: Get SSO admin token
  uri:
    url: https://keycloak-{{ workshop_openshift_namespace_rhsso }}.{{ route_subdomain }}/auth/realms/master/protocol/openid-connect/token
    validate_certs: false
    method: POST
    body:
      username: "{{workshop_rhsso_admin_user_name}}"
      password: "{{workshop_rhsso_admin_password}}"
      grant_type: "password"
      client_id: "admin-cli"
    body_format: form-urlencoded
    status_code: 200,201,204
  register: sso_admin_token

- name: Verify custom realm exists
  uri:
    url: https://keycloak-{{ workshop_openshift_namespace_rhsso }}.{{ route_subdomain }}/auth/admin/realms/quarkus
    validate_certs: false
    method: GET
    headers:
      Accept: application/json
      Authorization: "Bearer {{ sso_admin_token.json.access_token }}"
    status_code: 200

- name: Verify Kafka CRD
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: kafkas.kafka.strimzi.io
  register: r_kafka_crd
  retries: 200
  delay: 10
  until: r_kafka_crd.resources | list | length == 1

- name: verify Kafka operator pod is running
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: openshift-operators
    label_selectors:
      - name=amq-streams-cluster-operator
    field_selectors:
      - status.phase=Running
  register: r_amq_operator_pod
  retries: 200
  delay: 10
  until: r_amq_operator_pod.resources | list | length == 1

- name: Verify Jaeger CRD
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: jaegers.jaegertracing.io
  register: r_jaeger_crd
  retries: 200
  delay: 10
  until: r_jaeger_crd.resources | list | length == 1

- name: verify Jaeger operator pod is running
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: openshift-operators
    label_selectors:
      - name = jaeger-operator
  register: r_jaeger_operator_pod
  retries: 200
  delay: 10
  until: r_jaeger_operator_pod.resources | list | length == 1

- name: verify get-a-username are accessible
  uri:
    url: http://get-a-username-{{ workshop_openshift_namespace_guide }}.{{ route_subdomain }}
    method: GET
    status_code: 200

# Leave this as the last task in the playbook.
- name: workload verification tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool